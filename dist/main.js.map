{"version":3,"file":"main.js","mappings":"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","sources":["webpack://top-template-repository/./node_modules/@aloe_vera/drop-down-func/package/nav-func.js","webpack://top-template-repository/./src/js/progressive-collapsing-menu.js","webpack://top-template-repository/./src/index.js"],"sourcesContent":["const closeSubNavItem = (lastElement, classListVals, closerObj) => {\n  const closeObj = document.querySelector(closerObj);\n\n  closeObj.addEventListener(\"click\", () => {\n    const classListValueLength = classListVals.length;\n\n    const lastElementClassListValue = lastElement.classList.value.slice(\n      -classListValueLength\n    );\n\n    if (lastElementClassListValue === classListVals) {\n      lastElement.classList.toggle(classListVals);\n    }\n  });\n\n  return closeObj;\n};\n\nconst elementDataAttribute = ({\n  elementToGetAttribute,\n  dataAttributeValue,\n}) => {\n  const getDataAttribute = () => {\n    const attributeValue =\n      elementToGetAttribute.getAttribute(dataAttributeValue);\n    return attributeValue;\n  };\n  return {\n    getDataAttribute,\n  };\n};\n\nconst customClassList = ({ classListVal, element }) => {\n  const toggleClassList = () => {\n    element.classList.toggle(classListVal);\n  };\n  return {\n    toggleClassList,\n  };\n};\n\nconst arrayOfElements = () => {\n  const elements = [];\n\n  const lengthGetter = function getLastItemFromElements() {\n    return elements.length;\n  };\n\n  const lastGetter = function getLastItemFromElements() {\n    return elements.slice(-1).at(-1);\n  };\n\n  const secondLastGetter = function getSecondLastItemFromElements() {\n    return elements.slice(-2).reverse().slice(-1).at(-1);\n  };\n\n  const adder = function addItemToElements(elementToAdd) {\n    return elements.push(elementToAdd);\n  };\n  return {\n    lengthGetter,\n    lastGetter,\n    secondLastGetter,\n    adder,\n  };\n};\n\nconst dynamicClassToggler = ({\n  classListValues,\n  elementToAddInArrays,\n  elementsInArray,\n  closeToggler,\n}) => {\n  const addElementInArray = () => elementsInArray.adder(elementToAddInArrays);\n\n  const toggleLastElementClassList = () => {\n    customClassList({\n      classListVal: classListValues,\n      element: elementsInArray.lastGetter(),\n    }).toggleClassList();\n  };\n\n  const toggleSecondLastElementClassList = () => {\n    customClassList({\n      classListVal: classListValues,\n      element: elementsInArray.secondLastGetter(),\n    }).toggleClassList();\n  };\n\n  const toggleThisElementsClassListWithCondition = (\n    classListValue,\n    ClassListValueMatch\n  ) => {\n    if (\n      classListValue.classList.value === ClassListValueMatch.classList.value\n    ) {\n      toggleLastElementClassList();\n    }\n  };\n\n  const switchToggler =\n    function switchBetweenToggledItemToCurrentThenToggleItWhenToggled(\n      length,\n      lastElement,\n      secondLastElement,\n      classListValue\n    ) {\n      if (\n        length >= 2 &&\n        lastElement.classList.value === classListValue &&\n        secondLastElement.classList.value === classListValue\n      ) {\n        toggleSecondLastElementClassList();\n\n        toggleThisElementsClassListWithCondition(\n          lastElement,\n          secondLastElement\n        );\n      }\n    };\n\n  const toggleClass = () => {\n    addElementInArray();\n    toggleLastElementClassList();\n\n    const elementsInArrayLength = elementsInArray.lengthGetter();\n    const lastElemenInArray = elementsInArray.lastGetter();\n    const secondLastElementInArray = elementsInArray.secondLastGetter();\n    const elementToAddClassListValue = elementToAddInArrays.classList.value;\n\n    switchToggler(\n      elementsInArrayLength,\n      lastElemenInArray,\n      secondLastElementInArray,\n      elementToAddClassListValue\n    );\n\n    closeSubNavItem(lastElemenInArray, classListValues, closeToggler);\n  };\n\n  return {\n    toggleClass,\n  };\n};\n\nconst subNavInArray = arrayOfElements();\nconst navBarTogglerInArray = arrayOfElements();\n\nconst dropDown = ({\n  elementToListen,\n  itsDataAttribute,\n  subElement,\n  classListValue,\n  togglerClassListValue,\n  closerToggler,\n}) => {\n  const dropDownElement = () => {\n    elementToListen.forEach((element) => {\n      element.addEventListener(\"click\", (e) => {\n        e.stopPropagation();\n\n        const dataAttributeValue = elementDataAttribute({\n          elementToGetAttribute: element,\n          dataAttributeValue: itsDataAttribute,\n        }).getDataAttribute();\n\n        const subNavItem = document.querySelector(\n          `${subElement}=\"${dataAttributeValue}\"]`\n        );\n\n        subNavItem.addEventListener(\"click\", (e2) => e2.stopPropagation());\n\n        dynamicClassToggler({\n          classListValues: classListValue,\n          elementToAddInArrays: subNavItem,\n          elementsInArray: subNavInArray,\n          closeToggler: closerToggler,\n        }).toggleClass();\n\n        dynamicClassToggler({\n          classListValues: togglerClassListValue,\n          elementToAddInArrays: element,\n          elementsInArray: navBarTogglerInArray,\n          closeToggler: closerToggler,\n        }).toggleClass();\n      });\n    });\n  };\n\n  return {\n    dropDownElement,\n  };\n};\n\nexport default dropDown;\n","const menuLinks = [];\nconst menuLinksWidths = [];\n\nconst getMenuLinks =\n  function pushAllOfYourMenuLinksThatYouWantToControlLaterWithFillMenulinks({\n    elements,\n  }) {\n    const pushAll = () =>\n      elements.forEach((element) => {\n        menuLinks.push(element);\n        menuLinksWidths.push(element.clientWidth);\n      });\n\n    return { pushAll };\n  };\n\nconst populateElement = ({ array, max, moreMenu, parent }) => {\n  const populateDropDown =\n    function appendMultipleHtmlElementRemainingInTheMenuLinksArray() {\n      return array.forEach((element) => {\n        parent.appendChild(element);\n      });\n    };\n\n  const populateAllMenuLinks =\n    function appendAllMenuLinksElementsButRemoveMoreMenulinks() {\n      return array.slice(0, max).forEach((link) => {\n        parent.appendChild(link);\n        moreMenu.remove();\n      });\n    };\n\n  const populateRemainingLinks =\n    function appendAllRemainingMenuLinksElementsbutAppendMoreMenuLinks() {\n      return array.slice(0, max).forEach((link) => {\n        parent.appendChild(link);\n        parent.appendChild(moreMenu);\n      });\n    };\n\n  return {\n    populateAllMenuLinks,\n    populateRemainingLinks,\n    populateDropDown,\n  };\n};\n\nconst menuLinksCalculation = () => {\n  const getAverageWidth = (array, arrayLength) =>\n    array.reduce((accu, currVal) => accu + currVal, 0) / arrayLength.length;\n\n  const getMaxTabs = (average, addValue) =>\n    Math.floor(window.innerWidth / (average + addValue));\n\n  const getExcessElements = (array, arrayLength, max) =>\n    array.slice(-(arrayLength + max));\n\n  return {\n    getAverageWidth,\n    getMaxTabs,\n    getExcessElements,\n  };\n};\n\nconst fillMenuLinksCalculation = menuLinksCalculation();\n\nconst fillMenuLinks = ({\n  menuLinksParent,\n  moreMenuLinksElement,\n  moreMenuLinkToggler,\n  adjustIt = 0,\n}) => {\n  const averageMenuLinksWidth = fillMenuLinksCalculation.getAverageWidth(\n    menuLinksWidths,\n    menuLinks,\n  );\n\n  const maxTabs = fillMenuLinksCalculation.getMaxTabs(\n    averageMenuLinksWidth,\n    adjustIt,\n  );\n\n  const getAllExcessMenuLinks = fillMenuLinksCalculation.getExcessElements(\n    menuLinks,\n    menuLinks.length,\n    maxTabs,\n  );\n\n  const filltabs =\n    function fillMenuLinksWithConditionOtherwiseJustfillWhatItCanFill() {\n      if (maxTabs >= menuLinks.length) {\n        return populateElement({\n          array: menuLinks,\n          max: maxTabs,\n          parent: menuLinksParent,\n          moreMenu: moreMenuLinkToggler,\n        }).populateAllMenuLinks();\n      }\n\n      populateElement({\n        array: getAllExcessMenuLinks,\n        parent: moreMenuLinksElement,\n      }).populateDropDown();\n\n      return populateElement({\n        array: menuLinks,\n        max: maxTabs,\n        parent: menuLinksParent,\n        moreMenu: moreMenuLinkToggler,\n      }).populateRemainingLinks();\n    };\n\n  return {\n    filltabs,\n  };\n};\n\nexport { getMenuLinks, fillMenuLinks };\n","import './assets/component-one/style.css';\nimport dropDown from '@aloe_vera/drop-down-func/package/nav-func';\nimport { fillMenuLinks, getMenuLinks } from './js/progressive-collapsing-menu';\n\nwindow.addEventListener('load', () => {\n  const moreLinks = document.querySelectorAll('a[data-more-menu-link]');\n\n  dropDown({\n    elementToListen: moreLinks,\n    itsDataAttribute: 'data-more-menu-link',\n    subElement: 'div[data-more-link-inside',\n    classListValue: 'visible',\n    togglerClassListValue: 'active-toggler',\n    closerToggler: '.close_toggler > div',\n  }).dropDownElement();\n});\n\nconst menuLinks = document.querySelector('ul[class=\"unordered_links\"]');\nconst moreMenuLinks = document.querySelector(\n  'ul[class=\"more_unordered_links\"]',\n);\nconst navigationLinks = document.querySelectorAll('li[class=\"contain_link\"]');\nconst moreNavLink = document.querySelector(\n  'li[class=\"contain_link more_links\"]',\n);\n\ngetMenuLinks({\n  elements: navigationLinks,\n}).pushAll();\n\nwindow.addEventListener('resize', () => {\n  fillMenuLinks({\n    menuLinksParent: menuLinks,\n    moreMenuLinksElement: moreMenuLinks,\n    moreMenuLinkToggler: moreNavLink,\n    adjustIt: 40,\n  }).filltabs();\n});\n\nwindow.addEventListener('load', () => {\n  fillMenuLinks({\n    menuLinksParent: menuLinks,\n    moreMenuLinksElement: moreMenuLinks,\n    moreMenuLinkToggler: moreNavLink,\n    adjustIt: 40,\n  }).filltabs();\n});\n"],"names":["customClassList","classListVal","element","toggleClassList","classList","toggle","arrayOfElements","elements","lengthGetter","length","lastGetter","slice","at","secondLastGetter","reverse","adder","elementToAdd","push","dynamicClassToggler","classListValues","elementToAddInArrays","elementsInArray","closeToggler","toggleLastElementClassList","switchToggler","lastElement","secondLastElement","classListValue","value","ClassListValueMatch","toggleThisElementsClassListWithCondition","toggleClass","elementsInArrayLength","lastElemenInArray","secondLastElementInArray","elementToAddClassListValue","classListVals","closerObj","closeObj","document","querySelector","addEventListener","classListValueLength","closeSubNavItem","subNavInArray","navBarTogglerInArray","elementToListen","itsDataAttribute","subElement","togglerClassListValue","closerToggler","dropDownElement","forEach","e","stopPropagation","dataAttributeValue","elementToGetAttribute","getDataAttribute","getAttribute","elementDataAttribute","subNavItem","e2","menuLinks","menuLinksWidths","populateElement","array","max","moreMenu","parent","populateAllMenuLinks","link","appendChild","remove","populateRemainingLinks","populateDropDown","fillMenuLinksCalculation","getAverageWidth","arrayLength","reduce","accu","currVal","getMaxTabs","average","addValue","Math","floor","window","innerWidth","getExcessElements","fillMenuLinks","menuLinksParent","moreMenuLinksElement","moreMenuLinkToggler","adjustIt","averageMenuLinksWidth","maxTabs","getAllExcessMenuLinks","filltabs","moreLinks","querySelectorAll","moreMenuLinks","navigationLinks","moreNavLink","pushAll","clientWidth","getMenuLinks"],"sourceRoot":""}